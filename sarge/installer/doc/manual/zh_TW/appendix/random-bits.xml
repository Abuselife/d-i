<!-- Start of file appendix/random-bits.xml -->

<appendix id="random-bits"
><title
>其他</title>


<!-- Start of file appendix/example-preseed.xml -->

<sect1 id="example-preseed">
<title
>預先設定檔範例</title>

<para
>這是一個完整的用於自動安裝的預先設定檔的實例。使用的說明在 <xref linkend="automatic-install"/>。您可以在使用該檔案前移除某些行前面的註解。 <note
><para
>為了能在手冊中正確示範這個例子，我們不得不分割一些設定行。透過使用行連接符號 <quote
>\</quote
> 和下一行的縮排標記。在實際的設定檔中，這些分割的設定行必須合併成 <emphasis
>單獨的一行</emphasis
>。 如果您沒有這樣做，預先設定檔會造成不可預估的失敗。 </para
><para
>一個<quote
>乾淨的</quote
>範例檔包含在安裝光碟的 <filename
>/doc/install/manual</filename
> 目錄，網際網路上位於 <ulink url="&url-example-preseed;"
></ulink
>。 </para
></note>

<informalexample
><screen
>#### Modifying syslinux.cfg.

# Edit the syslinux.cfg (or similar) file, and add parameters to the end
# of the append line(s) for the kernel.
#
# You'll at least want to add a parameter telling the installer where to
# get its preseed file from.
# If you're installing from USB media, use this, and put the preseed file
# in the toplevel directory of the USB stick.
#   preseed/file=/hd-media/preseed
# If you're netbooting, use this instead:
#   preseed/url=http://host/path/to/preseed
# If you're remastering a CD, you could use this:
#   preseed/file=/cdrom/preseed
# Be sure to copy this file to the location you specify.
# 
# While you're at it, you may want to throw a debconf/priority=critical in
# there, to avoid most questions even if the preseeding below misses some.
# And you might set the timeout to 1 in syslinux.cfg to avoid needing to hit
# enter to boot the installer.
#
# Language, country, and keyboard selection cannot be preseeded from a file,
# because the questions are asked before the preseed file can be loaded.
# Instead, to avoid these questions, pass some more parameters to the kernel.
# If you are using the sarge installer, you need three:
#
#    languagechooser/language-name=English
#    countrychooser/shortlist=US
#    console-keymaps-at/keymap=us
#
# Newer versions of the installer need only two:
#
#    debian-installer/locale=en_US
#    console-keymaps-at/keymap=us
#
# Note that the kernel accepts a maximum of 8 command line options and
# 8 environment options (including any options added by default for the
# installer). If these numbers are exceeded, 2.4 kernels will drop any
# excess options and 2.6 kernels will panic. With kernel 2.6.9 or newer,
# you can use 32 command line options and 32 environment options.
#
# Some of the default options, like 'vga=normal' may be safely removed
# for most installations, which may allow you to add more options for
# preseeding.

#### Shell commands.

# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preseed file like this one. Only use preseed files from trusted
# locations! To drive that home, and because it's generally useful, here's
# a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command              string \
#    wget http://url/to/my.udeb -O /tmp/my.udeb; udpkg -i /tmp/my.udeb

# This command is run just before the install finishes, but when there is
# still a usable /target directory.
#d-i preseed/late_command               string \
#    for deb in /hd-media/*.deb; do cp $deb /target/tmp; \
#    chroot /target dpkg -i /tmp/$(basename $deb); done

# This command is run just as base-config is starting up.
#base-config base-config/early_command  string echo hi mom

# This command is run after base-config is done, just before the login:
# prompt. This is a good way to install a set of packages you want, or to
# tweak the configuration of the system.
#base-config base-config/late_command   string \
#    apt-get install zsh; chsh -s /bin/zsh

#### Network configuration.

# Of course, this won't work if you're loading your preseed file from the
# network! But it's great if you're booting from CD or USB stick. You can
# also pass network config parameters in on the kernel params if you are
# loading preseed files from the network.

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i  netcfg/choose_interface            select auto

# If you prefer to configure the network manually, here's how:
#d-i netcfg/disable_dhcp                boolean true
#d-i netcfg/get_nameservers             string 192.168.1.1
#d-i netcfg/get_ipaddress               string 192.168.1.42
#d-i netcfg/get_netmask                 string 255.255.255.0
#d-i netcfg/get_gateway                 string 192.168.1.1
#d-i netcfg/confirm_static              boolean true

# Note that any hostname and domain names assigned from dhcp take
# precedence over values set here. However, setting the values still
# prevents the questions from being shown even if values come from dhcp.
d-i  netcfg/get_hostname                string unassigned-hostname
d-i  netcfg/get_domain                  string unassigned-domain

# Disable that annoying WEP key dialog.
d-i  netcfg/wireless_wep                string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname               string radish

#### Mirror settings.

d-i  mirror/country                     string enter information manually
d-i  mirror/http/hostname               string http.us.debian.org
d-i  mirror/http/directory              string /debian
d-i  mirror/suite                       string testing
d-i  mirror/http/proxy                  string 

### Partitioning.

# If the system has free space you can choose to only partition that space.
#d-i partman-auto/init_automatically_partition \
#    select Use the largest continuous free space

# Alternatively, you can specify a disk to partition. The device name can
# be given in either devfs or traditional non-devfs format.
# For example, to use the first disk devfs knows of:
d-i  partman-auto/disk                  string /dev/discs/disc0/disc

# You can choose from any of the predefined partitioning recipes:
d-i  partman-auto/choose_recipe         select \
     All files in one partition (recommended for new users)
#d-i partman-auto/choose_recipe         select Desktop machine
#d-i partman-auto/choose_recipe         select Multi-user workstation

# Or provide a recipe of your own...
# The recipe format is documented in the file devel/partman-auto-recipe.txt.
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file    string /hd-media/recipe

# If not, you can put an entire recipe in one line. This example creates
# a small /boot partition, suitable swap, and uses the rest of the space
# for the root partition:
#d-i partman-auto/expert_recipe         string boot-root :: \
#    20 50 100 ext3 $primary{ } $bootable{ } method{ format } format{ } \
#    use_filesystem{ } filesystem{ ext3 } mountpoint{ /boot } . \
#    500 10000 1000000000 ext3 method{ format } format{ } \
#    use_filesystem{ } filesystem{ ext3 } mountpoint{ / } . \
#    64 512 300% linux-swap method{ swap } format{ } . 
# For reference, here is that same recipe in a more readable form:
#    boot-root ::
#       40 50 100 ext3
#          $primary{ } $bootable{ }
#          method{ format } format{ }
#          use_filesystem{ } filesystem{ ext3 }
#          mountpoint{ /boot }
#       .
#       500 10000 1000000000 ext3
#          method{ format } format{ }
#          use_filesystem{ } filesystem{ ext3 }
#          mountpoint{ / }
#       .
#       64 512 300% linux-swap
#          method{ swap } format{ }
#       .

# This makes partman automatically partition without confirmation.
d-i partman/confirm_write_new_label     boolean true
d-i partman/choose_partition            select \
    Finish partitioning and write changes to disk
d-i partman/confirm                     boolean true

#### Boot loader installation.

# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip                boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i  grub-installer/only_debian         boolean true

# This one makes grub-installer install to the MBR if if finds some other OS
# too, which is less safe as it might not be able to boot that other OS.
d-i  grub-installer/with_other_os       boolean true

# Alternatively, if you want to install to a location other than the mbr,
# uncomment and edit these lines:
#d-i grub-installer/bootdev             string (hd0,0)
#d-i grub-installer/only_debian         boolean false
#d-i grub-installer/with_other_os       boolean false

##### Finishing up the first stage install.

# Avoid that last message about the install being complete.
d-i  prebaseconfig/reboot_in_progress   note 


##### Preseeding base-config.

# Avoid the introductory message.
base-config  base-config/intro          note

# Avoid the final message.
base-config  base-config/login          note

# If you installed a display manager, but don't want to start it immediately
# after base-config finishes.
#base-config base-config/start-display-manager        boolean false

###### Time zone setup.

# Controls whether or not the hardware clock is set to GMT.
base-config  tzconfig/gmt                             boolean true

# Simple timezone preseeding. You may set this to any valid setting for $TZ;
# see the contents of /usr/share/zoneinfo/ for options.
base-config  tzconfig/preseed_zone                    string US/Eastern

# Timezone preseeding used to be more complex; the old method is documented
# here as well for completeness. If you're using sarge, you'll need this
# method.

# If you told the installer that you're in the United States, then you
# can set the time zone using this variable.
# (Choices are: Eastern, Central, Mountain, Pacific, Alaska, Hawaii,
# Aleutian, Arizona East-Indiana, Indiana-Starke, Michigan, Samoa, other)
#base-config tzconfig/choose_country_zone/US          select Eastern
# If you told it you're in Canada.
# (Choices are: Newfoundland, Atlantic, Eastern, Central,
# East-Saskatchewan, Saskatchewan, Mountain, Pacific, Yukon, other)
#base-config tzconfig/choose_country_zone/CA          select Eastern
# If you told it you're in Brazil. (Choices are: East, West, Acre,
# DeNoronha, other)
#base-config tzconfig/choose_country_zone/BR          select East
# Many countries have only one time zone. If you told the installer you're
# in one of those countries, you can choose its standard time zone via this
# question.
#base-config tzconfig/choose_country_zone_single      boolean true
# This question is asked as a fallback for countries other than those
# listed above, which have more than one time zone. You can preseed one of
# the time zones, or "other".
#base-config tzconfig/choose_country_zone_multiple    select 

###### Account setup.

# To preseed the root password, you have to put it in the clear in this
# file. That is not a very good idea, use caution!
#passwd passwd/root-password            password r00tme
#passwd passwd/root-password-again      password r00tme

# If you want to skip creation of a normal user account.
#passwd passwd/make-user                boolean false

# Alternatively, you can preseed the user's name and login.
#passwd passwd/user-fullname            string Debian User
#passwd passwd/username                 string debian
# And their password, but use caution!
#passwd passwd/user-password            password insecure
#passwd passwd/user-password-again      password insecure

###### Apt setup.

# This question controls what source the second stage installation uses
# for packages. Choices are cdrom, http, ftp, filesystem, edit sources list
# by hand
base-config  apt-setup/uri_type         select http

# If you choose ftp or http, you'll be asked for a country and a mirror.
base-config  apt-setup/country          select enter information manually
base-config  apt-setup/hostname         string http.us.debian.org
base-config  apt-setup/directory        string /debian
# Stop after choosing one mirror.
base-config  apt-setup/another          boolean false

# You can choose to install non-free and contrib software.
#base-config apt-setup/non-free         boolean true
#base-config apt-setup/contrib          boolean true

# Do enable security updates.
base-config  apt-setup/security-updates boolean true

###### Package selection.

# You can choose to install any combination of tasks that are available.
# Available tasks as of this writing include: Desktop environment,
# Web server, Print server, DNS server, File server, Mail server, 
# SQL database, manual package selection. The last of those will run
# aptitude. You can also choose to install no tasks, and force the
# installation of a set of packages in some other way.
tasksel      tasksel/first   multiselect Desktop environment
#tasksel     tasksel/first   multiselect Web server, Mail server, DNS server

###### Mailer configuration.

# During a normal install, exim asks only two questions. Here's how to
# avoid even those. More complicated preseeding is possible.
exim4-config exim4/dc_eximconfig_configtype \
    select no configuration at this time

# It's a good idea to set this to whatever user account you choose to
# create. Leaving the value blank results in postmaster mail going to
# /var/mail/mail.
exim4-config exim4/dc_postmaster        string 

###### X Configuration.

# Preseeding Debian's X config is possible, but you probably need to know
# some details about the video hardware of the machine, since Debian's X
# configurator does not do fully automatic configuration of everything.

# X can detect the right driver for some cards, but if you're preseeding,
# you override whatever it chooses. Still, vesa will work most places.
#xserver-xfree86 xserver-xfree86/config/device/driver select vesa

# A caveat with mouse autodetection is that if it fails, X will retry it
# over and over. So if it's preseeded to be done, there is a possibility of
# an infinite loop if the mouse is not autodetected.
#xserver-xfree86 xserver-xfree86/autodetect_mouse     boolean true

# Monitor autodetection is recommended.
xserver-xfree86 xserver-xfree86/autodetect_monitor    boolean true
# Uncomment if you have an LCD display.
#xserver-xfree86 xserver-xfree86/config/monitor/lcd   boolean true
# X has three configuration paths for the monitor. Here's how to preseed
# the "medium" path, which is always available. The "simple" path may not
# be available, and the "advanced" path asks too many questions.
xserver-xfree86  xserver-xfree86/config/monitor/selection-method \
    select medium
xserver-xfree86  xserver-xfree86/config/monitor/mode-list \
    select 1024x768 @ 60 Hz

###### Everything else.

# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file

# If you like, you can include other preseed files into this one.
# Any settings in those files will override pre-existing settings from this
# file. More that one file can be listed, separated by spaces; all will be
# loaded. The included files can have preseed/include directives of their
# own as well. Note that if the filenames are relative, they are taken from
# the same directory as the preseed file that includes them.
#d-i preseed/include                    string x.cfg

# More flexibly, this runs a shell command and if it outputs the names of
# preseed files, includes those files. For example, to switch configs based
# on a particular usb storage device (in this case, a built-in card reader):
#d-i preseed/include_command            string \
#    if $(grep -q "GUID: 0aec3050aec305000001a003" /proc/scsi/usb-storage-*/*); \
#    then echo kraken.cfg; else echo otherusb.cfg; fi
</screen
></informalexample>

</para>
</sect1>
<!--   End of file appendix/example-preseed.xml -->

<!-- Start of file appendix/files.xml -->


 <sect1 id="linuxdevices"
><title
>Linux 裡的設備</title>
<para
>在 Linux 裡，您會在 <filename
>/dev</filename
>發現許多很特別的檔案。這些檔案被稱為設備檔。在 Unix 世界裡，存取硬體的方式有些不一樣。這些特別的檔案的背後其實運行著驅動程式，而正是驅動程式控制著硬體。設備檔就是存取真實的系統元件的介面。<filename
>/dev</filename
> 目錄下的檔案的各種特性也和普通檔案大相徑庭。下面列舉了最重要的一些設備檔。 </para
><para>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>fd0</filename
></entry>
  <entry
>第一個軟碟機</entry>
</row
><row>
  <entry
><filename
>fd1</filename
></entry>
  <entry
>第二個軟碟機</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>hda</filename
></entry>
  <entry
>在第一個 IDE 埠(Master)的 IDE 硬碟/光碟機</entry>
</row
><row>
  <entry
><filename
>hdb</filename
></entry>
  <entry
>在第一個 IDE 埠(Slave)的 IDE 硬碟/光碟機</entry>
</row
><row>
  <entry
><filename
>hdc</filename
></entry>
  <entry
>在第二個 IDE 埠(Master)的 IDE 硬碟/光碟機</entry>
</row
><row>
  <entry
><filename
>hdd</filename
></entry>
  <entry
>在第二個 IDE 埠(Slave)的 IDE 硬碟/光碟機</entry>
</row
><row>
  <entry
><filename
>hda1</filename
></entry>
  <entry
>在第一塊 IDE 硬碟上的第一個分割區</entry>
</row
><row>
  <entry
><filename
>hdd15</filename
></entry>
  <entry
>在第四塊 IDE 硬碟上的第十五個分割區</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>sda</filename
></entry>
  <entry
>SCSI ID 最小(例如 0)的 SCSI 硬碟</entry>
</row
><row>
  <entry
><filename
>sdb</filename
></entry>
  <entry
>下一個 SCSI ID (例如 1)的 SCSI 硬碟</entry>
</row
><row>
  <entry
><filename
>sdc</filename
></entry>
  <entry
>下一個 SCSI ID (例如 2)的 SCSI 硬碟</entry>
</row
><row>
  <entry
><filename
>sda1</filename
></entry>
  <entry
>在第一塊 SCSI 硬碟上的第一個分割區</entry>
</row
><row>
  <entry
><filename
>sdd10</filename
></entry>
  <entry
>在第四塊 SCSI 硬碟上的第十個分割區</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>sr0</filename
></entry>
  <entry
>SCSI ID 最小的 SCSI 光碟機</entry>
</row
><row>
  <entry
><filename
>sr1</filename
></entry>
  <entry
>下一個 SCSI ID 的 SCSI 光碟機</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>ttyS0</filename
></entry>
  <entry
>序列埠 0，即 MS-DOS 下的 COM1</entry>
</row
><row>
  <entry
><filename
>ttyS1</filename
></entry>
  <entry
>序列埠 1，即 MS-DOS 下的 COM2</entry>
</row
><row>
  <entry
><filename
>psaux</filename
></entry>
  <entry
>PS/2 滑鼠設備</entry>
</row
><row>
  <entry
><filename
>gpmdata</filename
></entry>
  <entry
>虛擬設備，中繼從GPM(滑鼠)服務傳來的資料</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>cdrom</filename
></entry>
  <entry
>指向光碟機的符號鏈結</entry>
</row
><row>
  <entry
><filename
>mouse</filename
></entry>
  <entry
>指向滑鼠設備檔的符號鏈結</entry>
</row>
</tbody
></tgroup
></informaltable>

<informaltable
><tgroup cols="2"
><tbody>
<row>
  <entry
><filename
>null</filename
></entry>
  <entry
>所有指向該設備的東西都會消失</entry>
</row
><row>
  <entry
><filename
>zero</filename
></entry>
  <entry
>可以從該設備永無休止地讀出零</entry>
</row>
</tbody
></tgroup
></informaltable>

</para>

  <sect2>
<title
>設定您的滑鼠</title>

<para
>無論在 Linux 的控制台(console)裡(透過 gpm)，還是在 X 視窗環境之中，您都可以使用滑鼠。這兩種用法是可以相容的，只要設定 gpm 中繼程式，令其將信號流往 X 伺服器： <informalexample
><screen>
mouse =&gt; /dev/psaux  =&gt; gpm =&gt; /dev/gpmdata -&gt; /dev/mouse =&gt; X
         /dev/ttyS0             (repeater)        (symlink)
         /dev/ttyS1
</screen
></informalexample
> 把中繼程式的通訊協定設為原始(raw)模式(在 <filename
>/etc/gpm.conf</filename
> 裡)，同時在 <filename
>/etc/X11/XF86Config</filename
> 或者 <filename
>/etc/X11/XF86Config-4</filename
> 裡設定，讓 X 使用原始的滑鼠協定。 </para
><para
>用這種方法使用 gpm 的話，就算在 X 裡也有其優勢。如果不小心把滑鼠拔下來後，只要像這樣重新啟動 gpm 就可以了：<informalexample
><screen>
# /etc/init.d/gpm restart
</screen
></informalexample
> 如此就可以在軟體層面上重新連接滑鼠，而不用重新啟動 X。 </para
><para
>如果您停用 gpm，或者因為某些原因沒有安裝它，請確定設定檔讓 X 從滑鼠設備 (例如 /dev/psaux) 直接讀取資料。欲知詳情，請參閱三鍵滑鼠的迷您指南，即 <filename
>/usr/share/doc/HOWTO/en-txt/mini/3-Button-Mouse.gz</filename
>、<userinput
>man gpm</userinput
>、<filename
>/usr/share/doc/gpm/FAQ.gz</filename
> 以及 <ulink url="&url-xfree86;current/mouse.html"
>README.mouse</ulink
>。 </para
><para arch="powerpc"
>對 PowerPC 來說，需要在 <filename
>/etc/X11/XF86Config</filename
> 或者 <filename
>/etc/X11/XF86Config-4</filename
> 設定滑鼠設備為 <userinput
>"/dev/input/mice"</userinput
>。 </para
><para arch="powerpc"
>當您的滑鼠只有一個按鍵的時候，現有的核心具有模擬三鍵滑鼠的能力。只需將下面加入 <filename
>/etc/sysctl.conf</filename
> 檔案。 <informalexample
><screen
># 3-button mouse emulation 
# turn on emulation
/dev/mac_hid/mouse_button_emulation = 1
# Send middle mouse button signal with the F11 key
/dev/mac_hid/mouse_button2_keycode = 87
# Send right mouse button signal with the F12 key
/dev/mac_hid/mouse_button3_keycode = 88
# For different keys, use showkey to tell you what the code is.
</screen
></informalexample>

</para>
  </sect2>
 </sect1>

 <sect1 id="tasksel-size-list">
 <title
>各軟體集所需的磁碟空間</title>

<!-- Note for d-i and manual maintainers
 Sizes of tasks should be determined by running "tasksel new" on a system
 that been fully installed without selecting any tasks. By selecting a
 task together with the "manual selection" option, aptitude will be started
 and show the sizes for the task. After deselecting the packages to be
 installed, quit aptitude and repeat for other tasks.
 Space requirements need to be determined from tasksel as tasksel will not
 install recommended packages while selecting a task from aptitude will.
-->       

<para
>在 i386 架構上，基本的安裝預設使用 2.4 核心，需要 573MB 的磁碟空間，這裡面包含了標準軟體套件。 </para
><para
>下面的表格一一列出了 tasksel 中每個軟體集所需的磁碟空間大小。該列表是使用 aptitude 產生的。請注意，有些軟體集之間會有相重疊的部分，所以兩個軟體集一同 安裝後所占的空間，可能會小於這兩個軟體集分別安裝所占的空間。 </para
><para
>注意您需要將表格中列出的大小加上基本安裝大小以決定分割區的大小。多數列出的大小如 <quote
>安裝大小</quote
> 將用在 <filename
>/usr</filename
>﹔列在 <quote
>下載大小</quote
> 是(臨時地)用在 <filename
>/var</filename
>。 </para
><para>

<informaltable
><tgroup cols="4">
<thead>
<row>
  <entry
>軟體集</entry>
  <entry
>安裝大小 (MB)</entry>
  <entry
>下載大小 (MB)</entry>
  <entry
>安裝所需空間 (MB)</entry>
</row>
</thead>

<tbody>
<row>
  <entry
>桌面</entry>
  <entry
>1392</entry>
  <entry
>460</entry>
  <entry
>1852</entry>
</row>

<row>
  <entry
>Web 伺服器</entry>
  <entry
>36</entry>
  <entry
>12</entry>
  <entry
>48</entry>
</row>

<row>
  <entry
>印表機伺服器</entry>
  <entry
>168</entry>
  <entry
>58</entry>
  <entry
>226</entry>
</row>

<row>
  <entry
>DNS 伺服器</entry>
  <entry
>2</entry>
  <entry
>1</entry>
  <entry
>3</entry>
</row>

<row>
  <entry
>檔案伺服器</entry>
  <entry
>47</entry>
  <entry
>24</entry>
  <entry
>71</entry>
</row>

<row>
  <entry
>郵件伺服器</entry>
  <entry
>10</entry>
  <entry
>3</entry>
  <entry
>13</entry>
</row>

<row>
  <entry
>SQL 資料庫</entry>
  <entry
>66</entry>
  <entry
>21</entry>
  <entry
>87</entry>
</row>

</tbody>
</tgroup
></informaltable>

<note
><para
><emphasis
>桌面</emphasis
> 軟體集將同時安裝 Gnome 和 KDE 桌面環境。 </para
></note>

</para
><para
>如果安裝英文之外的其他語言，<command
>tasksel</command
> 在語言有對應 locale 時，可以自動安裝 <firstterm
>localization task</firstterm
>。每種語言需要的空間不同﹔您應該給 200MB 以上的空間用於下載和安裝。 </para>
 </sect1>
<!--   End of file appendix/files.xml -->

<!-- Start of file appendix/chroot-install.xml -->

 <sect1 id="linux-upgrade">
 <title
>透過 Unix/Linux 系統來安裝 &debian;</title>

<para
>本節說明了如何透過現有的 Unix 或 Linux 系統來安裝 &debian;，而非使用本手冊後面要談到的基於 ncurses，由選單驅動的安裝軟體。這篇``交叉安裝(cross-install)'' HOWTO 是應使用者的要求而撰寫的。他們原來是 Redhat、Mandrake 和 SUSE 的使用者，現轉而使用 &debian;。在本節中，我們假設您對於輸入 *nix 指令以及在檔案系統中穿梭移動並不生疏。同時，在本節中，<prompt
>$</prompt
> 符號表示這個指令是在使用者當前使用的系統中輸入的，而 <prompt
>#</prompt
> 則表示這個指令是在 Debian chroot 環境中輸入的。 </para
><para
>您一旦根據自己的需求設定好了新的 Debian 系統，就可以將您的原來系統中的使用者資料(如果有的話)全部遷移到 Debian 裡去。然後就能繼續爽了。一言以蔽之，這是一次"不關機"的 &debian; 安裝。同時，這也是處理那些因為硬體原因不能透過任何開機或者安裝媒介完成安裝的權宜之計。 </para>

  <sect2>
  <title
>準備開始</title>
<para
>根據需要，用已經安裝的 *nix 的分割區工具重新分割詞區，要劃分出至少一個檔案系統外加 置換分割區。您如果只用控制台(console)的話，至少要準備 150MB 空間，倘若想要裝 X， 就需要至少 300MB 的空間了。 </para
><para
>在您的分割區上建立檔案系統。舉例來說，如果要在 <filename
>/dev/hda6</filename
> 分割區(以後的例子中，將把它作為 root 分割區) 建立一個 ext3 格式的檔案系統： <informalexample
><screen>
# mke2fs -j /dev/hda6
</screen
></informalexample
> 如果想建立的是 ext2 格式的檔案系統，就要去掉 <userinput
>-j</userinput
>。 </para
><para
>初始化並啟用置換分割區(請把分割區編號替換成您希望用作置換分割區的分割區編號): <informalexample
><screen>
# mkswap /dev/hda5
# sync; sync; sync
# swapon /dev/hda5
</screen
></informalexample
> 把一個分割區掛載(mount)到 <filename
>/mnt/debinst</filename
>(這是安裝的位置，將來作為您新系統的根(<filename
>/</filename
>)檔案系統)。掛載點的名稱是任意的，後面的步驟將會用到它。 <informalexample
><screen
># mkdir /mnt/debinst
# mount /dev/hda6 /mnt/debinst
</screen
></informalexample>

</para>
  </sect2>

  <sect2>
  <title
>安裝 <command
>debootstrap</command
></title>
<para
>Debian 安裝程式使用的軟體，同時也為官方所採用，被用來安裝基系統的工具是 <command
>debootstrap</command
>。它使用了 <command
>wget</command
> 和 <command
>ar</command
>，否則就僅僅依賴 <classname
>/bin/sh</classname
>。如果您的系統裡沒有 <command
>wget</command
> 和 <command
>ar</command
>，請安裝。然後再下載並安裝 <command
>debootstrap</command
>。 </para
><para
>如果您用的是以 rpm 為基礎的系統，那麼可以用 alien 將 .deb 檔案轉換成為 .rpm 檔案，或者下載已被包裝成 rpm 套件的版本，它位於 <ulink url="http://people.debian.org/~blade/install/debootstrap"
></ulink
> </para
><para
>或者您也可以透過下面的步驟手動安裝它。先新建一個工作目錄，它被用來放置解壓縮後的 .deb 文件： <informalexample
><screen>
# mkdir work
# cd work
</screen
></informalexample
> <command
>debootstrap</command
> 的二進位檔被包裝餘 Debian 的檔案庫中(請確保選擇了與您架構相對應的檔案)。下載位於 <ulink url="http://ftp.debian.org/debian/pool/main/d/debootstrap/"
> pool</ulink
> 的<command
>debootstrap</command
> .deb，把它拷貝到工作目錄，並從該檔案解壓縮出這些二進位檔。要把二進位檔安裝到系統中，您必須要擁有 root 的權限。 <informalexample
><screen
># tar -xf debootstrap_0.X.X_arch.deb
# cd /
# zcat /full-path-to-work/work/data.tar.gz | tar xv
</screen
></informalexample>

</para>
  </sect2>

  <sect2>
  <title
>執行 <command
>debootstrap</command
></title>
<para
><command
>debootstrap</command
> 執行後，會自己從檔案庫直接下載所需的檔案。您可以把下面的命令列範例中的 <userinput
>http.us.debian.org/debian</userinput
> 替換成任何一個 Debian 檔案庫的鏡像站。選擇鏡像站時，可以根據您的網路情況選擇較近的一個。鏡像的列表在 <ulink url="http://www.debian.org/misc/README.mirrors"
></ulink
>。 </para
><para
>如果您已經把一張 &releasename; 版本的 &debian; CD 掛載在 <filename
>/cdrom</filename
>，那麼也可以把 http URL 替換成 file URL，即：<userinput
>file:/cdrom/debian/</userinput
> </para
><para
>請將下列架構中的一個替換 <replaceable
>ARCH</replaceable
> 於 <command
>debootstrap</command
> 指令中： <userinput
>alpha</userinput
>, <userinput
>arm</userinput
>, <userinput
>hppa</userinput
>, <userinput
>i386</userinput
>, <userinput
>ia64</userinput
>, <userinput
>m68k</userinput
>, <userinput
>mips</userinput
>, <userinput
>mipsel</userinput
>, <userinput
>powerpc</userinput
>, <userinput
>s390</userinput
>，或 <userinput
>sparc</userinput
>。 <informalexample
><screen
># /usr/sbin/debootstrap --arch ARCH &releasename; \\
     /mnt/debinst http://http.us.debian.org/debian
</screen
></informalexample>

</para>
  </sect2>

  <sect2>
  <title
>基本系統的設定</title>
<para
>現在您在硬碟上已經裝上了一套真正的 Debian 作業系統，盡管它還很瘦小。<command
>Chroot</command
> 用來進入該系統： <informalexample
><screen
># chroot /mnt/debinst /bin/bash
</screen
></informalexample>

</para>

   <sect3>
   <title
>分割區的掛載</title>
<para
>您需要新建 <filename
>/etc/fstab</filename
>。 <informalexample
><screen>
# editor /etc/fstab
</screen
></informalexample
> 這裡有個樣板，您不妨根據自己的情況來修改它： <informalexample
><screen>
# /etc/fstab: static file system information.
#
# file system    mount point   type    options                  dump pass
/dev/XXX         /             ext2    defaults                 0    0
/dev/XXX         /boot         ext2    ro,nosuid,nodev          0    2

/dev/XXX         none          swap    sw                       0    0
proc             /proc         proc    defaults                 0    0

/dev/fd0         /mnt/floppy   auto    noauto,rw,sync,user,exec 0    0
/dev/cdrom       /mnt/cdrom    iso9660 noauto,ro,user,exec      0    0

/dev/XXX         /tmp          ext2    rw,nosuid,nodev          0    2
/dev/XXX         /var          ext2    rw,nosuid,nodev          0    2
/dev/XXX         /usr          ext2    rw,nodev                 0    2
/dev/XXX         /home         ext2    rw,nosuid,nodev          0    2
</screen
></informalexample
> 您可以透過 <userinput
>mount -a</userinput
> 來掛載您的 <filename
>/etc/fstab</filename
> 中所標明的所有檔案系統，您也可以一個一個地分別掛載這些檔案系統，像：<informalexample
><screen>
# mount /path   # e.g.: mount /usr
</screen
></informalexample
> 您可以多次掛載 proc 檔案系統。盡管通常把它掛載到 /proc，但是它還是可以被掛載到任意的地方。如果您沒有用 <userinput
>mount -a</userinput
>，那麼請一定要在接著做之前先把 proc 掛載好： <informalexample
><screen
># mount -t proc proc /proc
</screen
></informalexample>

</para>
   </sect3>

   <sect3>
   <title
>鍵盤的設定</title>
<para
>若要設定您的鍵盤，請： <informalexample
><screen
># dpkg-reconfigure console-data
</screen
></informalexample>

</para>
   </sect3>

   <sect3>
   <title
>網路的設定</title>
<para
>要設定網路的話，請修改 <filename
>/etc/network/interfaces</filename
>, <filename
>/etc/resolv.conf</filename
> 和 <filename
>/etc/hostname</filename
>。 <informalexample
><screen>
# editor /etc/network/interfaces 
</screen
></informalexample
> 這裡有些從 <filename
>/usr/share/doc/ifupdown/examples</filename
>: <informalexample
><screen>
######################################################################
# /etc/network/interfaces -- configuration file for ifup(8), ifdown(8)
# See the interfaces(5) manpage for information on what options are 
# available.
######################################################################

# We always want the loopback interface.
#
auto lo
iface lo inet loopback

# To use dhcp:
#
# auto eth0
# iface eth0 inet dhcp

# An example static IP setup: (broadcast and gateway are optional)
#
# auto eth0
# iface eth0 inet static
#     address 192.168.0.42
#     network 192.168.0.0
#     netmask 255.255.255.0
#     broadcast 192.168.0.255
#     gateway 192.168.0.1
</screen
></informalexample
> 填入您的 nameserver(s) 和搜索指令到 <filename
>/etc/resolv.conf</filename
>: <informalexample
><screen>
# editor /etc/resolv.conf
</screen
></informalexample
> 這裡有個簡單的 <filename
>/etc/resolv.conf</filename
>: <informalexample
><screen>
search hqdom.local\000
nameserver 10.1.1.36
nameserver 192.168.9.100
</screen
></informalexample
> 輸入您的系統的主機名(2 到 63 個字元)：<informalexample
><screen>
# echo DebianHostName &gt; /etc/hostname
</screen
></informalexample
> 如果您有多張網卡，在您修改 <filename
>/etc/modules</filename
> 檔案時，一定要按照期望的順序排列驅動模組的名字。這樣的話，在系統啟動時，每塊網卡就能取得您所預期的 interface 名稱了(eth0、eth1 等等)。 </para>
   </sect3>

   <sect3>
   <title
>時區、使用者和 APT 的設定</title>
<para
>設定您的時區，添加一個普通使用者，再執行下面的指令選擇您的 <command
>apt</command
> 來源 <informalexample
><screen
># /usr/sbin/base-config new
</screen
></informalexample>

</para>
   </sect3>

   <sect3>
   <title
>locales 的設定</title>
<para
>要配置您的 locale 設定，以便使用英語以外的其它語言，就需要安裝提供 locales 支援的軟體套件，同時設定之： <informalexample
><screen>
# apt-get install locales
# dpkg-reconfigure locales
</screen
></informalexample
> 【注意】：在此之前必須設定好 apt，即在 base-config 階段就設定好它。在使用非 ASCII 或 latin1 的字元集的 locale 之前，請先參閱相應的本地化指南(localisation HOWTO)。 </para>
   </sect3>
  </sect2>

  <sect2>
  <title
>核心的安裝</title>
<para
>您若想啟動這個系統，您很可能還需要一個 Linux 核心和一個 boot loader。 可以用下面指令找到那些目前可用的被打好包的核心 <informalexample
><screen>
# apt-cache search kernel-image
</screen
></informalexample
> 接下來把您所選中的核心的軟體套件名稱作為命令列的參數來安裝它。 <informalexample
><screen
># apt-get install kernel-image-<replaceable
>2.X.X-arch-etc</replaceable
>
</screen
></informalexample>

</para>
  </sect2>

  <sect2>
<title
>Boot Loader 的設定</title>
<para
>要讓您的 &debian; 系統能夠啟動，還要設定您的 boot loader，好讓它能已安裝的核心並用上新的根分割區。注意 debootstrap 不會安裝 boot loader， 因此您要在 Debian 的 chroot 中使用 apt-get 完成。 </para
><para arch="i386"
>透過查閱 <userinput
>info grub</userinput
> 或 <userinput
>man lilo.conf</userinput
> 可以得到一些有關設定 bootloader 的提示。如果您希望保留用來安裝 Debian 的那個系統，那麼就在現有的 grub <filename
>menu.lst</filename
> 或 <filename
>lilo.conf</filename
> 裡為 Debian 系統的安裝添加一組設定就可以了。對於 <filename
>lilo.conf</filename
> 您也可以把這個檔案拷貝到新的系統裡，然後在新的系統裡編輯它。當您修改好設定檔，執行 lilo (請記住，您在哪個系統裡執行 lilo，它就會用哪個系統裡的 <filename
>lilo.conf</filename
> )。 </para
><para arch="i386"
>下面有一個簡單的 <filename
>/etc/lilo.conf</filename
> 例子： <informalexample
><screen
>boot=/dev/hda6
root=/dev/hda6
install=/boot/boot-menu.b
delay=20
lba32
image=/vmlinuz
label=Debian
</screen
></informalexample>

</para
><para arch="powerpc"
>透過查閱 <userinput
>man yaboot.conf</userinput
> 可以得到一些有關設定 bootloader 的提示。如果您希望繼續保留用來安裝 Debian 的那個系統，那麼在 <filename
>yaboot.conf</filename
> 裡為 Debian 系統的安裝添加一組設定就可以了。您也可以把這個檔案拷貝到新的系統裡，然後在新的系統裡編輯它。當您修改設定之後，執行 ybin (請記住，您在哪個系統執行 yaboot 它就會用哪個系統裡的 <filename
>lilo.conf</filename
> )。 </para
><para arch="powerpc"
>下面有一個簡單的 <filename
>/etc/yaboot.conf</filename
> 例子： <informalexample
><screen>
boot=/dev/hda2
device=hd:
partition=6
root=/dev/hda6
magicboot=/usr/lib/yaboot/ofboot
timeout=50
image=/vmlinux
label=Debian
</screen
></informalexample
> 在有些電腦上，您或許應該把 <userinput
>ide0:</userinput
> 換成 <userinput
>hd:</userinput
>。 </para>
  </sect2>
 </sect1>
<!--   End of file appendix/chroot-install.xml -->

</appendix>
<!--   End of file appendix/random-bits.xml -->
